name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Cancel prev CI if new commit come (learned from ant-design repo)
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  Lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - run: npm install
      
      - name: Lint JavaScript/TypeScript Frontend
        run: npx eslint 'src/**/*.{js,jsx,ts,tsx}' --no-fix --max-warnings=0 
      
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Lint Rust Backend
        run: |
          find src-tauri/src -name '*.rs' | xargs rustfmt --check

  Build:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # - platform: macos-latest
          #   args: '--target aarch64-apple-darwin'
          - platform: 'ubuntu-latest'
            args: ''
          # - platform: 'windows-latest'
          #   args: ''

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - run: npm install

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin' || '' }}

      - uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"
          key: ${{ matrix.platform }}-${{ matrix.args }}

      - name: Test Build
        run: npx tauri build ${{ matrix.args }}
        env:
          SJMCL_MICROSOFT_CLIENT_SECRET: ${{ secrets.SJMCL_MICROSOFT_CLIENT_SECRET }}
          SJMCL_CURSEFORGE_API_KEY: ${{ secrets.SJMCL_CURSEFORGE_API_KEY }}
